var Quercus=function(){"use strict";const t=(t,e)=>t instanceof e,e=(t,n,r=!1)=>{let c;let u;let i;let o=!0;1===n.length?(c=t,i=n[0]):(t.has(n[0])&&s.isTreeNode(t.get(n[0]))?c=t.get(n[0]):r?(c=new s,t.set(n[0],c)):o=!1,i=(u=n.slice(1))[0]);return n.length>2&&o?e(c,u,r):{success:o,rest:i,target:c}},s=class extends Map{constructor(t=[]){super(),t.forEach(t=>{this.setPath(t[0],t[1])})}static isTreeNode(e){return t(e,s)}hasPath(t,n=!0){const r=e(this,t);return!(!r.success||!r.target.has(r.rest))&&(!n||!s.isTreeNode(r.target.get(r.rest)))}getPath(t){const s=e(this,t);return s.success&&s.target.has(s.rest)?s.target.get(s.rest):null}setPath(t,s){const n=e(this,t,!0);n.target.set(n.rest,s)}};return s}();
