var Quercus=function(){"use strict";const t=(t,e)=>t instanceof e,e=(t,r,s=!1)=>{let u;let c;let i=!0;1===r.length?(u=t,c=r[0]):(t.has(r[0])&&n.isTreeNode(t.get(r[0]))?u=t.get(r[0]):s?(u=new n,t.set(r[0],u)):i=!1,c=r[1]);return r.length>2&&i?e(u,r.slice(1),s):{success:i,rest:c,target:u}},n=class extends Map{constructor(t=[]){super(),t.forEach(t=>this.setPath(t[0],t[1]))}static isTreeNode(e){return t(e,n)}hasPath(t,r=!1){if(0===t.length)return r;const s=e(this,t);return!(!s.success||!s.target.has(s.rest))&&(!!r||!n.isTreeNode(s.target.get(s.rest)))}getPath(t){if(0===t.length)return this;const n=e(this,t);return n.success&&n.target.has(n.rest)?n.target.get(n.rest):null}setPath(t,n){if(0===t.length)return null;const r=e(this,t,!0);return r.target.set(r.rest,n),r.target}};return n}();
